# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build & Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_and_release:
    runs-on: windows-2019
    env:
      TIMT_PROJECT_NAME: 'Snaffler'
      TIMT_SOLUTION_FILE: 'Snaffler.sln'
      TIMT_BINARY_PATH: '${{ github.workspace }}\Snaffler\bin\Release'
      TIMT_BINARY_FILE: '${{ github.workspace }}\Snaffler\bin\Release\Snaffler.exe'
    steps:
    - uses: actions/checkout@v3
    
    - name: Install NuGet
      uses: NuGet/setup-nuget@v1.2.0
      
    - name: Restore
      run: nuget restore $env:TIMT_SOLUTION_FILE
      
    - name: Install MSBuild
      uses: microsoft/setup-msbuild@v1.1
      
    - name: Build
      run: msbuild $env:TIMT_SOLUTION_FILE -t:rebuild -property:Configuration=Release

    - name: Get Release Version
      id: get_release_version
      run: |
        $assembly = [System.Reflection.Assembly]::LoadFile("$env:TIMT_BINARY_FILE")
        $version = $assembly.GetName().Version.ToString() + '-' + '${{ github.run_number }}'
        echo "::set-output name=version::$version"
      shell: powershell

    - name: Create Zip
      id: create_zip
      run: |
        Compress-Archive -Path "$env:TIMT_BINARY_PATH\*" -DestinationPath ".\$env:TIMT_PROJECT_NAME.zip"
        echo "::set-output name=assetFilename::$env:TIMT_PROJECT_NAME.zip"
      shell: powershell

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_release_version.outputs.version }}
        release_name: ${{ env.TIMT_PROJECT_NAME }} v${{ steps.get_release_version.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.create_zip.outputs.assetFilename }}
        asset_name: ${{ env.TIMT_PROJECT_NAME }}-v${{ steps.get_release_version.outputs.version }}.zip
        asset_content_type: application/zip
